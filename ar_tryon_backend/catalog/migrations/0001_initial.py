# Generated by Django 4.2.7 on 2025-06-20 19:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="brands/")),
                (
                    "website",
                    models.URLField(blank=True, help_text="Brand's official website"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-friendly version of name",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Brief description of the category"
                    ),
                ),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this category is shown to users",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(
                        default=0, help_text="Lower numbers appear first"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["sort_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                (
                    "description",
                    models.TextField(help_text="Detailed product description"),
                ),
                (
                    "short_description",
                    models.CharField(
                        help_text="Brief description for listings", max_length=255
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("M", "Men"),
                            ("F", "Women"),
                            ("U", "Unisex"),
                            ("K", "Kids"),
                        ],
                        default="U",
                        max_length=1,
                    ),
                ),
                (
                    "available_sizes",
                    models.CharField(
                        default="S,M,L,XL",
                        help_text="Comma-separated list of available sizes",
                        max_length=50,
                    ),
                ),
                (
                    "available_colors",
                    models.CharField(
                        default="Black,White",
                        help_text="Comma-separated list of available colors",
                        max_length=100,
                    ),
                ),
                ("stock_quantity", models.PositiveIntegerField(default=0)),
                ("is_available", models.BooleanField(default=True)),
                (
                    "is_try_on_enabled",
                    models.BooleanField(
                        default=True,
                        help_text="Whether this product supports virtual try-on",
                    ),
                ),
                (
                    "try_on_category",
                    models.CharField(
                        choices=[
                            ("tops", "Tops (shirts, t-shirts, sweaters)"),
                            ("bottoms", "Bottoms (pants, shorts, skirts)"),
                            ("dresses", "Dresses"),
                            ("outerwear", "Outerwear (jackets, coats)"),
                            ("accessories", "Accessories"),
                        ],
                        default="tops",
                        help_text="Category for try-on processing",
                        max_length=50,
                    ),
                ),
                ("meta_title", models.CharField(blank=True, max_length=200)),
                ("meta_description", models.CharField(blank=True, max_length=300)),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Show in featured products"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="catalog.brand",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="catalog.category",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="products/")),
                (
                    "alt_text",
                    models.CharField(
                        help_text="Alternative text for accessibility", max_length=200
                    ),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, help_text="Main product image"),
                ),
                ("sort_order", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="catalog.product",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        choices=[
                            (1, "1 Star"),
                            (2, "2 Stars"),
                            (3, "3 Stars"),
                            (4, "4 Stars"),
                            (5, "5 Stars"),
                        ],
                        help_text="Rating from 1 to 5 stars",
                    ),
                ),
                ("title", models.CharField(help_text="Review title", max_length=200)),
                ("content", models.TextField(help_text="Detailed review")),
                ("size_purchased", models.CharField(blank=True, max_length=10)),
                ("color_purchased", models.CharField(blank=True, max_length=50)),
                ("is_approved", models.BooleanField(default=True)),
                ("is_verified_purchase", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="catalog.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("product", "user")},
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active"], name="catalog_pro_categor_891fe8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["brand", "is_active"], name="catalog_pro_brand_i_ca0f3c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["is_featured", "is_active"],
                name="catalog_pro_is_feat_b968c0_idx",
            ),
        ),
    ]
